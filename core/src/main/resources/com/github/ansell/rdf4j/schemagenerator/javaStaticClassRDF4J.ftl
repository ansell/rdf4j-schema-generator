<#macro doI level=1>${StringUtils.repeat(indent, level)}</#macro>
<#macro escapeAndWrapLine rawString><#assign escapedDescription = rawString?js_string>
<#assign oneIndent><@doI/></#assign>
${WordUtils.wrap(escapedDescription, 70, "\n ${oneIndent} * ", false)}</#macro>
<#macro schemaRecordJavadoc schemaRecord>
/**
<#if schemaRecord.getLabel().isPresent()>
<@doI/> * <@escapeAndWrapLine rawString="${schemaRecord.getLabel().get().stringValue()}"/>
<@doI/> * <p>
</#if>
<@doI/> * {@code ${schemaRecord.getIRI().stringValue()?js_string}}
<#if schemaRecord.getDescription().isPresent()>
<@doI/> * <p>
<@doI/> * <@escapeAndWrapLine rawString="${schemaRecord.getDescription().get().stringValue()}"/>
</#if>
<@doI/> * @see <a href="${schemaRecord.getIRI().stringValue()?js_string}}">${schemaRecord.getRawRecordKey()?js_string}</a>
<@doI/> */
</#macro>
/*
 * Auto-generated by RDF4JSchemaGenerator
 */
<#if packageName??>
package ${packageName};

</#if>
import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.ValueFactory;
import org.eclipse.rdf4j.model.impl.SimpleValueFactory;

/**
 * ${title!"No title found"}
<#if description??>
 * ${description!""}
</#if>
 *
 * Namespace ${name}
 * Prefix: {@code <${prefix}>}
 *
<#list seeAlsoUrls as seeAlsoUrl>
 * @see <a href="${seeAlsoUrl}>${seeAlsoUrl}</a>
</#list>
 */
public class ${className} {

<@doI/>/**
<@doI/> * {@code <${prefix}>}
<@doI/> */
<@doI/>public static final String NAMESPACE = "${prefix}"; 

<@doI/>/**
<@doI/> * {@code <${name}>}
<@doI/> */
<@doI/>public static final String PREFIX = "${name}"; 

<#if stringConstants??>
<@doI/>/**********************
<@doI/> * IRI String Constants
<@doI/> **********************/
<#list stringConstants as stringConstant>

<@doI/><@schemaRecordJavadoc schemaRecord=stringConstant />
<@doI/>public static final String ${stringConstant.getFormattedRecordKey()} = "${stringConstant.getRawRecordKey()}";
</#list>
</#if>

<#if localNameStringConstants??>
<@doI/>/*****************************
<@doI/> * Local Name String Constants
<@doI/> *****************************/
<#list localNameStringConstants as localNameStringConstant>

<@doI/><@schemaRecordJavadoc schemaRecord=localNameStringConstant />
<@doI/>public static final String ${localNameStringConstant.getFormattedRecordKey()} = "${localNameStringConstant.getRawRecordKey()}";
</#list>
</#if>

<#if iriConstants??>
<@doI/>/***************
<@doI/> * IRI Constants
<@doI/> ***************/
<#list iriConstants as iriConstant>

<@doI/><@schemaRecordJavadoc schemaRecord=iriConstant />
<@doI/>public static final IRI ${iriConstant.getFormattedRecordKey()};
</#list>
</#if>

<@doI/>/**
<@doI/> * Static initializer
<@doI/> */
<@doI/>static {
<@doI/><@doI/>ValueFactory vf = SimpleValueFactory.getInstance();
<#if iriConstants??>
<@doI/><@doI/>/***********************
<@doI/><@doI/> * IRI Constant creation
<@doI/><@doI/> ***********************/
<#list iriConstants as iriConstant>
<@doI/><@doI/>${iriConstant.getFormattedRecordKey()} = vf.createIRI("${iriConstant.getIRI().stringValue()?j_string}");
</#list>
</#if>
<@doI/>}

<@doI/>private ${className}() {
<@doI/><@doI/>// static access only
<@doI/>}
}